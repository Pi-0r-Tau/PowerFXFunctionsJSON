{
    "functions": [
      {
        "name": "FunctionWithTableInput",
        "description": "Abstract base class for all Texl builtin functions which take table as the first argument.",
        "syntax": "FunctionWithTableInput(namespace, name, description, category, returnType, maskLambdas, arityMin, arityMax, paramTypes)",
        "parameters": [
          {
            "name": "namespace",
            "type": "DPath",
            "description": "The namespace of the function."
          },
          {
            "name": "name",
            "type": "String",
            "description": "The name of the function."
          },
          {
            "name": "description",
            "type": "StringGetter",
            "description": "The description of the function."
          },
          {
            "name": "category",
            "type": "FunctionCategories",
            "description": "The category of the function."
          },
          {
            "name": "returnType",
            "type": "DType",
            "description": "The return type of the function."
          },
          {
            "name": "maskLambdas",
            "type": "BigInteger",
            "description": "The mask lambdas of the function."
          },
          {
            "name": "arityMin",
            "type": "Integer",
            "description": "The minimum arity of the function."
          },
          {
            "name": "arityMax",
            "type": "Integer",
            "description": "The maximum arity of the function."
          },
          {
            "name": "paramTypes",
            "type": "Array",
            "description": "The parameter types of the function."
          }
        ],
        "constraints": {
          "namespace": "Must be a valid DPath.",
          "name": "Must be a string.",
          "description": "Must be a valid StringGetter.",
          "category": "Must be a valid FunctionCategories.",
          "returnType": "Must be a valid DType.",
          "maskLambdas": "Must be a BigInteger.",
          "arityMin": "Must be an integer.",
          "arityMax": "Must be an integer.",
          "paramTypes": "Must be an array of DType."
        },
        "validators": {
          "namespace": "isDPath",
          "name": "isString",
          "description": "isStringGetter",
          "category": "isFunctionCategories",
          "returnType": "isDType",
          "maskLambdas": "isBigInteger",
          "arityMin": "isInteger",
          "arityMax": "isInteger",
          "paramTypes": "isArrayOfDType"
        },
        "signatures": [
          ["namespace", "name", "description", "category", "returnType", "maskLambdas", "arityMin", "arityMax", "paramTypes"]
        ],
        "errorHandling": {
          "errors": [
            {
              "code": "InvalidType",
              "message": "The parameter must be a valid type."
            },
            {
              "code": "InvalidNamespace",
              "message": "The namespace must be a valid DPath."
            }
          ]
        }
      }
    ]
  }